# Perhaps you use a different location for these. These helpers
# allow your project to define these and just include this file.
KDEVOPS_TERRAFORM_DIR ?=	terraform
KDEVOPS_PLAYBOOKS_DIR ?=	playbooks
KDEVOPS_LOCAL_WORK :=

kdevops_all: kdevops_deps
PHONY := kdevops_all

kdevops_terraform_deps:
	$(Q)ansible-playbook $(ANSIBLE_VERBOSE) \
		$(KDEVOPS_PLAYBOOKS_DIR)/install_terraform.yml
PHONY += kdevops_terraform_deps

kdevops_install_libvirt:
	$(Q)ansible-playbook $(ANSIBLE_VERBOSE) \
		$(KDEVOPS_PLAYBOOKS_DIR)/libvirt_user.yml -e "skip_configuration=True"

kdevops_configure_libvirt:
	$(Q)ansible-playbook $(ANSIBLE_VERBOSE) \
		$(KDEVOPS_PLAYBOOKS_DIR)/libvirt_user.yml -e "skip_install=True" \
		-e 'running_user=$(USER)'

kdevops_verify_libvirt_user:
	$(Q)ansible-playbook $(ANSIBLE_VERBOSE) \
		$(KDEVOPS_PLAYBOOKS_DIR)/libvirt_user.yml -e "only_verify_user=True"

PHONY += kdevops_verify_libvirt_user

kdevops_libvirt_storage_pool_create:
	$(Q)ansible-playbook $(ANSIBLE_VERBOSE) \
		$(KDEVOPS_PLAYBOOKS_DIR)/libvirt_storage_pool_create.yml

PHONY += kdevops_libvirt_storage_pool_create

kdevops_deps: kdevops_terraform_deps $(KDEVOPS_DEPS)
	@echo Installed dependencies
PHONY += kdevops_deps

kdevops-deps: kdevops_deps
PHONY += kdevops-deps

kdevops_terraform_clean:
	$(Q)if [ -d $(KDEVOPS_TERRAFORM_DIR) ]; then \
		make -C $(KDEVOPS_TERRAFORM_DIR) clean ; \
	fi
PHONY += kdevops_terraform_clean

kdevops_clean: kdevops_terraform_clean
	@echo Cleaned up
PHONY += kdevops_clean

.PHONY: $(PHONY)
