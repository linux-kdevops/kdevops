config WORKFLOWS_REBOOT_LIMIT
	bool "Reboot-limit"
	help
	  If you are doing kernel tests which includes a reboot, along the way,
	  or if you do a reboot after a series of tests, you may want to first
	  figure out what your upper bound limit is on successful reboots
	  without any issue are before running a series of tests. Without this,
	  you really have no idea clearly if you can reboot without issues
	  forever and may end up with a false positive on an unidentified issue.

if WORKFLOWS_REBOOT_LIMIT

menu "Configure and reboot-limit"
choice
	prompt "Reboot test type"
	default REBOOT_LIMIT_TYPE_ANSIBLE

config REBOOT_LIMIT_TYPE_ANSIBLE
	bool "Use the Ansible reboot module"
	help
	  Ansible has a module to reboot. Its implementation is to
	  run 'shutdown -r'. If you are OK with this then select
	  this.

config REBOOT_LIMIT_TYPE_SYSTEMD_REBOOT
	bool "Use systemctl reboot"
	help
	  This will try to reboot instead using systemctl reboot.

config REBOOT_LIMIT_TYPE_SYSTEMD_KEXEC
	bool "Use systemctl kexec"
	help
	  This will try to reboot instead using systemctl kexec.

config REBOOT_LIMIT_TYPE_COMPARE_BOTH
	bool "Compare regular reboot vs kexec"
	help
	  This will test both regular reboot (ansible) and kexec reboot
	  sequentially to compare their performance characteristics.
	  Regular reboot will be tested first, followed by kexec reboot.
	  Statistics will be collected separately for each reboot type.

endchoice

config REBOOT_LIMIT_TEST_TYPE
	string
	default "ansible" if REBOOT_LIMIT_TYPE_ANSIBLE
	default "systemctl_reboot" if REBOOT_LIMIT_TYPE_SYSTEMD_REBOOT
	default "systemctl_kexec" if REBOOT_LIMIT_TYPE_SYSTEMD_KEXEC
	default "compare_both" if REBOOT_LIMIT_TYPE_COMPARE_BOTH

config REBOOT_LIMIT_COMPARE_BOTH_ENABLED
	bool
	default y if REBOOT_LIMIT_TYPE_COMPARE_BOTH
	help
	  Internal configuration variable to track when comparison mode is enabled.

config REBOOT_LIMIT_BOOT_MAX
	int "How many reboots should we do to consider reboots OK?"
	default 100
	help
	  This will make the make reboot-limit-baseline consist of the number
	  specified of reboots.

config REBOOT_LIMIT_WATCHDOG
	bool "Enable a watchdog for the reboot-limit test"
	help
	  This can be enabled but doesn't do much yet. Eventually this will
	  use the systemd built-in watchdog. But we have to also consider
	  the really rare cases where even Ansible times out. Could be due
	  to a DHCP after bootup, for example.

if REBOOT_LIMIT_WATCHDOG

config REBOOT_LIMIT_WATCHDOG_CHECK_TIME
	int "How often to run the reboot-limit watchdog in seconds"
	default 5
	help
	  How often to trigger running the reboot-limit watchdog, in seconds.

endif

config REBOOT_LIMIT_ENABLE_LOOP
	bool "Enable loop testing for reboot-limit"
	default y
	help
	  Enable this to run reboot-limit tests in a loop until a failure
	  is found or steady state is reached.

if REBOOT_LIMIT_ENABLE_LOOP

config REBOOT_LIMIT_LOOP_STEADY_STATE_GOAL
	int "Steady-state goal for reboot-limit loop testing"
	default 100
	help
	  The maximum number of successful test loops to run before
	  declaring steady state achieved. Each loop runs REBOOT_LIMIT_BOOT_MAX
	  reboots, so the total number of reboots is this value multiplied
	  by REBOOT_LIMIT_BOOT_MAX.

config REBOOT_LIMIT_LOOP_STEADY_STATE_INCREMENTAL
	bool "Use incremental steady-state counting"
	default y
	help
	  Enable this so that the loop will resume from the last success
	  counter after failures rather than resetting to zero.

endif # REBOOT_LIMIT_ENABLE_LOOP

config REBOOT_LIMIT_BOOT_COUNT_CRASH_ENABLE
	bool "Force a crash after certain period of reboots"
	help
	  Enable the system to be crashed after a period of number of boots.

config REBOOT_LIMIT_BOOT_COUNT_CRASH
	int "After how many reboots should we force a crash"
	depends on REBOOT_LIMIT_BOOT_COUNT_CRASH_ENABLE
	help
	  After how many boots should we force a crash.

config REBOOT_LIMIT_ENABLE_DATA_COLLECTION
	bool "Enable data collection stats on every reboot"
	default y
	help
	  Enable this if you want to collect some statistics after every boot.

if REBOOT_LIMIT_ENABLE_DATA_COLLECTION

config REBOOT_LIMIT_DATA
	string "Where to place boot statistics as we move forward with tests"
	default "{{data_path}}/reboot-limit"
	help
	  This is the target location of where to we'd place the boot statistics
	  of each node. Note that {{data_path}} corresponds to the location set
	  by the configuration option CONFIG_WORKFLOW_DATA_PATH.

config REBOOT_LIMIT_DATA_REGULAR
	string "Where to place regular reboot statistics in comparison mode"
	default "{{data_path}}/reboot-limit/regular"
	depends on REBOOT_LIMIT_COMPARE_BOTH_ENABLED
	help
	  This is the target location for regular (ansible) reboot statistics
	  when running in comparison mode.

config REBOOT_LIMIT_DATA_KEXEC
	string "Where to place kexec reboot statistics in comparison mode"
	default "{{data_path}}/reboot-limit/kexec"
	depends on REBOOT_LIMIT_COMPARE_BOTH_ENABLED
	help
	  This is the target location for kexec reboot statistics
	  when running in comparison mode.

config REBOOT_LIMIT_ENABLE_SYSTEMD_ANALYZE
	bool "Enable data collection of systemd-analyze results"
	default y
	help
	  Enable this if you want to collect some systemd-analyze results
	  after every boot.

endif # REBOOT_LIMIT_ENABLE_DATA_COLLECTION

endmenu
endif # WORKFLOWS_REBOOT_LIMIT
