---
- name: Skip data partition creation for declared hosts
  ansible.builtin.debug:
    msg: "Skipping data partition creation - using declared hosts with pre-existing infrastructure"
  when:
    - kdevops_use_declared_hosts|default(false)|bool

- name: Include common role
  ansible.builtin.include_role:
    name: common
  when:
    - infer_uid_and_group|bool
    - not kdevops_use_declared_hosts|default(false)|bool

- name: Establish the fixed device name of the data device
  tags: ["data_partition"]
  when:
    - kdevops_enable_terraform|bool
    - kdevops_terraform_provider == "aws"
    - not kdevops_use_declared_hosts|default(false)|bool
  block:
    - name: Retrieve the block_device_map from terraform
      delegate_to: localhost
      run_once: true
      ansible.builtin.command:
        chdir: "{{ topdir_path }}/terraform/aws/"
        cmd: "terraform output -json block_device_map"
      register: terraform_output
      changed_when: false

    # FIXME: Stuff "/dev/sdf" into the data_device variable for AWS
    - name: Find the EBS volume that will house the /data file system
      vars:
        block_device_dict: "{{ terraform_output.stdout | from_json }}"
        local_map: "{{ block_device_dict[inventory_hostname] }}"
      ansible.builtin.set_fact:
        data_volume_id: "{{ 'nvme-Amazon_Elastic_Block_Store_' + item.value | regex_replace('-', '') }}"
      when: item.key == "/dev/sdf"
      with_dict: "{{ local_map }}"

    # This task replaces the value of data_device only in the scope of this role
    - name: Get the device name that matches the EBS volume ID
      ansible.builtin.set_fact:
        data_device: "{{ '/dev/' + item.key }}"
      when:
        - data_volume_id in item.value.links.ids
      loop_control:
        label: "Adding block device: /dev/{{ item.key }}"
      with_dict: "{{ ansible_devices }}"

- name: Create data partition if not created yet
  ansible.builtin.include_role:
    name: create_partition
  vars:
    disk_setup_device: "{{ data_device }}"
    disk_setup_fstype: "{{ data_fstype }}"
    disk_setup_label: "{{ data_label }}"
    disk_setup_fs_opts: "{{ data_fs_opts }}"
    disk_setup_path: "{{ data_path }}"
    disk_setup_user: "{{ data_user }}"
    disk_setup_group: "{{ data_group }}"
  tags: ["data_partition"]
  when:
    - not kdevops_use_declared_hosts|default(false)|bool

- name: Ensure data path exists and has correct permissions for declared hosts
  ansible.builtin.file:
    path: "{{ data_path }}"
    state: directory
    owner: "{{ data_user }}"
    group: "{{ data_group }}"
    mode: "0755"
  become: true
  become_method: sudo
  when:
    - kdevops_use_declared_hosts|default(false)|bool
  tags: ["data_partition"]
