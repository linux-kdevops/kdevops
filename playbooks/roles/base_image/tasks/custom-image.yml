---
- name: Set the pathname of the custom image directory
  ansible.builtin.set_fact:
    custom_image_dir: "{{ kdevops_storage_pool_path }}/guestfs/custom_images/{{ base_image_os_version }}"

- name: Ensure the custom image directory exists
  become: true
  ansible.builtin.file:
    path: "{{ custom_image_dir }}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"

- name: Set the pathname of the custom image
  ansible.builtin.set_fact:
    custom_image: "{{ custom_image_dir }}/{{ base_image_os_version }}.raw"

- name: Set the pathname of the custom image sentinel
  ansible.builtin.set_fact:
    custom_image_ok: "{{ custom_image_dir }}.ok"

- name: Set the pathname of the custom source configuration file
  ansible.builtin.set_fact:
    custom_source: "/etc/virt-builder/repos.d/kdevops-custom-images-{{ base_image_os_version }}.conf"

- name: Set the pathname of the custom index file
  ansible.builtin.set_fact:
    custom_index: "{{ custom_image_dir | realpath }}/index"

- name: Check if the custom image file already exists
  ansible.builtin.stat:
    path: "{{ custom_image }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: custom_image_stat

- name: Fetch the custom image
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.get_url:
    url: "{{ guestfs_custom_raw_image_url }}"
    dest: "{{ custom_image_dir }}"
    mode: "u=rw,g=r,o=r"
  register: custom_image_download
  when:
    - not custom_image_stat.stat.exists
    - guestfs_has_custom_raw_image_url|bool

- name: Resize custom image to match configured size
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    cmd: "qemu-img resize -f raw {{ custom_image }} {{ libvirt_image_size }}"
  changed_when: true
  when:
    - custom_image_download is changed
    - guestfs_has_custom_raw_image_url|bool

- name: Create temporary file for partition-expanded image
  ansible.builtin.tempfile:
    state: file
    suffix: .raw
  register: temp_resized_image
  when:
    - custom_image_download is changed
    - guestfs_has_custom_raw_image_url|bool

- name: Pre-allocate space for the resized image
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    cmd: "qemu-img create -f raw {{ temp_resized_image.path }} {{ libvirt_image_size }}"
  changed_when: true
  when:
    - custom_image_download is changed
    - guestfs_has_custom_raw_image_url|bool
    - temp_resized_image.path is defined

- name: Expand root partition to use full disk
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    cmd: "virt-resize --expand /dev/sda1 {{ custom_image }} {{ temp_resized_image.path }}"
  changed_when: true
  when:
    - custom_image_download is changed
    - guestfs_has_custom_raw_image_url|bool

- name: Replace original image with partition-expanded one
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    cmd: "mv -f {{ temp_resized_image.path }} {{ custom_image }}"
  changed_when: true
  when:
    - custom_image_download is changed
    - guestfs_has_custom_raw_image_url|bool

- name: Check if the custom image sentinel file already exists
  ansible.builtin.stat:
    path: "{{ custom_image_ok }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: sentinel_stat

- name: Check the custom image
  when:
    - not sentinel_stat.stat.exists
    - guestfs_has_custom_raw_image_sha512sums|bool
  block:
    - name: Get the base name of the sha512sums file
      ansible.builtin.set_fact:
        sha512sums_file: "{{ guestfs_custom_raw_image_sha512sums_url | basename }}"

    - name: Set the full pathname of sha512sums file
      ansible.builtin.set_fact:
        custom_image_sha512sum: "{{ custom_image_dir }}/{{ sha512sums_file }}"

    - name: Check if the sha512sums file already exists
      ansible.builtin.stat:
        path: "{{ custom_image_sha512sum }}"
        get_attributes: false
        get_checksum: false
        get_mime: false
      register: sha512sums_stat

    - name: Fetch the sha512sums file
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.get_url:
        url: "{{ guestfs_custom_raw_image_sha512sums_url }}"
        dest: "{{ custom_image_dir }}"
        mode: "u=rw,g=r,o=r"
      when:
        - not sha512sums_stat.stat.exists

    - name: Compute checksum of something
      ansible.builtin.command:
        cmd: "sha512sum --ignore-missing -c {{ sha512sums_file }}"
        chdir: "{{ custom_image_dir }}"
      changed_when: false

    - name: Get the UID of the kdevops user on the control host
      ansible.builtin.command:
        cmd: "id -u kdevops"
      register: id_output
      changed_when: false
      failed_when: false
      when:
        - not sentinel_stat.stat.exists

    - name: Set the kdevops UID for custom image
      ansible.builtin.set_fact:
        kdevops_uid: "-u {{ id_output.stdout }}"
      when:
        - not sentinel_stat.stat.exists
        - id_output.rc == 0

    - name: Set default kdevops UID for custom image if user doesn't exist
      ansible.builtin.set_fact:
        kdevops_uid: ""
      when:
        - not sentinel_stat.stat.exists
        - id_output.rc != 0

    - name: Create a temporary file for virt-customize commands
      ansible.builtin.tempfile:
        state: file
      register: custom_command_file
      when:
        - not sentinel_stat.stat.exists

    - name: Construct the virt-customize command file for custom image
      ansible.builtin.template:
        src: "{{ role_path }}/templates/virt-builder.j2"
        dest: "{{ custom_command_file.path }}"
        mode: "u=rw"
      when:
        - not sentinel_stat.stat.exists

    - name: Customize the downloaded image with kdevops user and settings
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.command:
        argv:
          - "virt-customize"
          - "-a"
          - "{{ custom_image }}"
          - "--commands-from-file"
          - "{{ custom_command_file.path }}"
      when:
        - libvirt_uri_system|bool
        - not sentinel_stat.stat.exists

    - name: Customize the downloaded image with kdevops user and settings (non-root)
      ansible.builtin.command:
        argv:
          - "virt-customize"
          - "-a"
          - "{{ custom_image }}"
          - "--commands-from-file"
          - "{{ custom_command_file.path }}"
      when:
        - not libvirt_uri_system|bool
        - not sentinel_stat.stat.exists

    - name: Clean up the virt-customize command file
      ansible.builtin.file:
        path: "{{ custom_command_file.path }}"
        state: absent
      when:
        - custom_command_file.path is defined
        - not sentinel_stat.stat.exists

    - name: Touch the custom image sentinel
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.file:
        path: "{{ custom_image_ok }}"
        state: touch
        mode: "u=rw,g=r,o=r"

- name: Check if the custom source exists
  ansible.builtin.stat:
    path: "{{ custom_source }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: custom_source_stat

- name: Build the custom source
  become: true
  ansible.builtin.template:
    src: "{{ role_path }}/templates/custom-source.j2"
    dest: "{{ custom_source }}"
    mode: "u=rw,g=r,o=r"
  when:
    - not custom_source_stat.stat.exists

- name: Check if the custom index exists
  ansible.builtin.stat:
    path: "{{ custom_index }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: custom_index_stat

- name: Build the custom index
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.template:
    src: "{{ role_path }}/templates/custom-index.j2"
    dest: "{{ custom_index }}"
    mode: "u=rw,g=r,o=r"
  when:
    - not custom_index_stat.stat.exists

- name: Show rolling distribution release warning
  ansible.builtin.debug:
    msg: |
      ------------------------------------------------------------------
      This is a rolling distribution release! To upgrade just do:

      rm -rf {{ custom_image }}/*
      rm -f  {{ custom_source }}
      rm -f  {{ custom_index }}

      Running guests always use their own copy. To rebuild your custom
      base image from the custom image, also remove the base image:

      rm -f  ${BASE_IMAGE}

      This can always be done safely without affecting running guests.
      ------------------------------------------------------------------
  when:
    - guestfs_has_custom_raw_image_rolling|bool

- name: Show the custom virt-builder database
  ansible.builtin.debug:
    msg: |
      Custom virt-builder source: {{ custom_source }}
      Custom virt-builder index: {{ custom_index }}
      Custom virt-builder image: {{ custom_image }}

- name: Generating the index for {{ base_image_os_version }}
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    argv:
      - "virt-builder-repository"
      - "--no-compression"
      - "{{ custom_image_dir }}"
  changed_when: true

- name: Copy custom image to base image location
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.copy:
    src: "{{ custom_image }}"
    dest: "{{ base_image_pathname }}"
    remote_src: true
    mode: "u=rw,g=r,o=r"
  when:
    - custom_image_stat.stat.exists or custom_image_download is changed
