---
- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "../extra_vars.yml"
      - "../extra_vars.yaml"
      - "../extra_vars.json"
      skip: true
  tags: vars

- include_role:
    name: create_data_partition
  tags: [ 'data_partition' ]

- name: Install dependencies for reboot-limit
  include_tasks: install-deps/main.yml
  tags: [ 'install', 'deps' ]

- name: Create the reboot-limit data collection directory for each host
  become: yes
  become_method: sudo
  file:
    path: "{{ reboot_limit_data }}/{{ ansible_ssh_host }}"
    state: directory
  tags: [ 'install', 'first_run' ]

- name: Set the file to collect systemctl-analyze results
  become: yes
  become_method: sudo
  set_fact:
    reboot_limit_analyze_file: "{{ reboot_limit_data}}/{{ ansible_ssh_host }}/{{ reboot_limits_systemctl_analyze_log }}"
  tags: [ 'vars' ]

- name: Set the file to collect the reboot count
  become: yes
  become_method: sudo
  set_fact:
    reboot_limit_count_file: "{{ reboot_limit_data}}/{{ ansible_ssh_host }}/{{ reboot_limits_count_log }}"
  tags: [ 'read_count', 'vars' ]

- name: Delete old results directory files if a reset was called
  become: yes
  become_method: sudo
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ reboot_limit_analyze_file }}"
    - "{{ reboot_limit_count_file }}"
  loop_control:
    label: "{{ item | regex_replace(reboot_limit_data | regex_escape()) | regex_replace('^/', '') }}"
  tags: [ 'reset' ]

- name: Set the path where we collect our local reboot-limit results
  set_fact:
    reboot_limit_local_results_dir: "../workflows/demos/reboot-limit/results"
  tags: [ 'vars' ]

- name: Clean up our localhost results directory and files as we are on boot number {{ reboot_limit_count }}
  local_action: file path="{{ reboot_limit_local_results_dir }}/" state=absent
  run_once: true
  tags: [ 'clean_local_results', 'first_run' ]

- name: Create the local results directory
  local_action: file path="{{ reboot_limit_local_results_dir }}/" state=directory
  run_once: true
  tags: [ 'first_run' ]

- name: Run the reboot loop
  include_tasks: do-reboot.yml
  with_sequence: count={{ reboot_limit_max }}
  tags: [ 'run_tests' ]

- name: Copy the latest results over when we're done
  tags: [ 'copy_results' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  fetch:
    src: "{{ item }}"
    dest: "{{ reboot_limit_local_results_dir }}/{{ item | regex_replace(reboot_limit_data | regex_escape()) | regex_replace('^/', '') }}"
    flat: yes
  with_items:
    - "{{ reboot_limit_analyze_file }}"
    - "{{ reboot_limit_count_file }}"
  loop_control:
    label: "{{ item | regex_replace(reboot_limit_data | regex_escape()) | regex_replace('^/', '') }}"
