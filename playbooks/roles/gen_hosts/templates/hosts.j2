{#
We use lstrip_blocks to ensure this file can be read by developers and use
proper identation. We don't need identation for the ansible hosts file.

Each workflow which has its own custom ansible host file generated should use
its own jinja2 template file and define its own ansible task for its generation.
#}
{% if kdevops_workflows_dedicated_workflow %}
{% if workflows_reboot_limit %}
[all]
localhost ansible_connection=local
{{ kdevops_host_prefix }}-reboot-limit
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-reboot-limit-dev
{% endif %}

[all:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

[baseline]
{{ kdevops_host_prefix }}-reboot-limit

[baseline:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% if kdevops_baseline_and_dev %}
[dev]
{{ kdevops_host_prefix }}-reboot-limit-dev

[dev:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% endif %}
[reboot-limit]
{{ kdevops_host_prefix }}-reboot-limit
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-reboot-limit-dev
{% endif %}

[reboot-limit:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"
{% elif kdevops_workflow_enable_fio_tests %}
[all]
localhost ansible_connection=local
{{ kdevops_host_prefix }}-fio-tests
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-fio-tests-dev
{% endif %}

[all:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

[baseline]
{{ kdevops_host_prefix }}-fio-tests

[baseline:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% if kdevops_baseline_and_dev %}
[dev]
{{ kdevops_host_prefix }}-fio-tests-dev

[dev:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% endif %}
[fio_tests]
{{ kdevops_host_prefix }}-fio-tests
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-fio-tests-dev
{% endif %}

[fio_tests:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

[service]

[service:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"
{% elif kdevops_workflow_enable_ai %}
{% if ai_enable_multifs_testing|default(false)|bool %}
{# Multi-filesystem section-based hosts #}
[all]
localhost ansible_connection=local
{% for node in all_generic_nodes %}
{{ node }}
{% endfor %}

[all:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

[baseline]
{% for node in all_generic_nodes %}
{% if not node.endswith('-dev') %}
{{ node }}
{% endif %}
{% endfor %}

[baseline:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% if kdevops_baseline_and_dev %}
[dev]
{% for node in all_generic_nodes %}
{% if node.endswith('-dev') %}
{{ node }}
{% endif %}
{% endfor %}

[dev:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% endif %}
[ai]
{% for node in all_generic_nodes %}
{{ node }}
{% endfor %}

[ai:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% set fs_configs = [] %}
{% for node in all_generic_nodes %}
{% set node_parts = node.split('-') %}
{% if node_parts|length >= 3 %}
{% set fs_type = node_parts[2] %}
{% set fs_config = node_parts[3:] | select('ne', 'dev') | join('_') %}
{% set fs_group = fs_type + '_' + fs_config if fs_config else fs_type %}
{% if fs_group not in fs_configs %}
{% set _ = fs_configs.append(fs_group) %}
{% endif %}
{% endif %}
{% endfor %}

{% for fs_group in fs_configs %}
[ai_{{ fs_group }}]
{% for node in all_generic_nodes %}
{% set node_parts = node.split('-') %}
{% if node_parts|length >= 3 %}
{% set fs_type = node_parts[2] %}
{% set fs_config = node_parts[3:] | select('ne', 'dev') | join('_') %}
{% set node_fs_group = fs_type + '_' + fs_config if fs_config else fs_type %}
{% if node_fs_group == fs_group %}
{{ node }}
{% endif %}
{% endif %}
{% endfor %}

[ai_{{ fs_group }}:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% endfor %}
{% else %}
{# Single-node AI hosts #}
[all]
localhost ansible_connection=local
{{ kdevops_host_prefix }}-ai
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-ai-dev
{% endif %}

[all:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

[baseline]
{{ kdevops_host_prefix }}-ai

[baseline:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% if kdevops_baseline_and_dev %}
[dev]
{{ kdevops_host_prefix }}-ai-dev

[dev:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"

{% endif %}
[ai]
{{ kdevops_host_prefix }}-ai
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-ai-dev
{% endif %}

[ai:vars]
ansible_python_interpreter = "{{ kdevops_python_interpreter }}"
{% endif %}
{% else %}
[all]
localhost ansible_connection=local
write-your-own-template-for-your-workflow-and-task
{% endif %}
{% else %}
[all]
localhost ansible_connection=local
{{ kdevops_host_prefix }}
{% if kdevops_baseline_and_dev == True %}
{{ kdevops_host_prefix }}-dev
{% endif %}
{% if kdevops_enable_iscsi %}
{{ kdevops_host_prefix }}-iscsi
{% endif %}
{% if kdevops_nfsd_enable %}
{{ kdevops_host_prefix }}-nfsd
{% endif %}
[all:vars]
ansible_python_interpreter =  "{{ kdevops_python_interpreter }}"
[baseline]
{{ kdevops_host_prefix }}
[baseline:vars]
ansible_python_interpreter =  "{{ kdevops_python_interpreter }}"
[dev]
{% if kdevops_baseline_and_dev %}
{{ kdevops_host_prefix }}-dev
{% endif %}
[dev:vars]
ansible_python_interpreter =  "{{ kdevops_python_interpreter }}"
{% if kdevops_enable_iscsi %}
[iscsi]
{{ kdevops_host_prefix }}-iscsi
[iscsi:vars]
ansible_python_interpreter =  "{{ kdevops_python_interpreter }}"
{% endif %}
{% if kdevops_nfsd_enable %}
[nfsd]
{{ kdevops_host_prefix }}-nfsd
[nfsd:vars]
ansible_python_interpreter =  "{{ kdevops_python_interpreter }}"
{% endif %}
[service]
{% if kdevops_enable_iscsi %}
{{ kdevops_host_prefix }}-iscsi
{% endif %}
{% if kdevops_nfsd_enable %}
{{ kdevops_host_prefix }}-nfsd
{% endif %}
[service:vars]
ansible_python_interpreter =  "{{ kdevops_python_interpreter }}"
{% endif %}
