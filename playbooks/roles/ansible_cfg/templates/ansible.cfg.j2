[defaults]
{% if ansible_cfg_callback_plugin_profile_tasks %}
callbacks_enabled = ansible.posix.profile_tasks, {{ ansible_cfg_callback_plugin_string }}
{% endif %}
deprecation_warnings = {{ ansible_cfg_deprecation_warnings }}
stdout_callback = {{ ansible_cfg_callback_plugin_string }}
check_mode_markers = {{ ansible_cfg_callback_plugin_check_mode_markers }}
display_failed_stderr = {{ ansible_cfg_callback_plugin_display_failed_stderr }}
display_ok_hosts = {{ ansible_cfg_callback_plugin_display_ok_hosts }}
display_skipped_hosts = {{ ansible_cfg_callback_plugin_display_skipped_hosts }}
show_custom_stats = {{ ansible_cfg_callback_plugin_show_custom_stats }}
show_per_host_start = {{ ansible_cfg_callback_plugin_show_per_host_start }}
show_task_path_on_failure = {{ ansible_cfg_callback_plugin_show_task_path_on_failure }}
interpreter_python = {{ ansible_cfg_interpreter_python_string }}
forks = {{ ansible_cfg_forks }}
enable_task_debugger = {{ ansible_cfg_task_debugger }}
inventory = {{ ansible_cfg_inventory }}

{% if ansible_cfg_callback_plugin_string == 'community.general.diy' %}
[callback_diy]
playbook_on_play_start_msg = PLAY: {{ '{{' }} ansible_callback_diy.play.name | default('') | upper {{ '}}' }}
playbook_on_play_start_msg_color = bright blue
playbook_on_task_start_msg = TASK: {{ '{{' }} ansible_callback_diy.task.name | default('') {{ '}}' }} [{{ '{{' }} ansible_play_hosts | join(',') {{ '}}' }}]
playbook_on_task_start_msg_color = yellow
runner_on_start_msg =
runner_on_start_msg_color = yellow
runner_on_ok_msg = ⠀⠀✓ [{{ '{{' }} ansible_callback_diy.result.host | default('host') {{ '}}' }}]
runner_on_ok_msg_color = green
runner_on_changed_msg = ⠀⠀(changed) [{{ '{{' }} ansible_callback_diy.result.host | default('host') {{ '}}' }}]
runner_on_changed_msg_color = bright yellow
runner_on_failed_msg = ⠀⠀FAILED: [{{ '{{' }} ansible_callback_diy.result.host | default('host') {{ '}}' }}] => {{ '{{' }} msg | default('') {{ '}}' }}{{ '{%' }} if stderr is defined and stderr | length > 0 {{ '%}' }} STDERR: {{ '{{' }} stderr {{ '}}' }}{{ '{%' }} endif {{ '%}' }}{{ '{%' }} if stdout is defined and stdout | length > 0 {{ '%}' }} STDOUT: {{ '{{' }} stdout {{ '}}' }}{{ '{%' }} endif {{ '%}' }}
runner_on_failed_msg_color = bright red
runner_on_skipped_msg = ⠀⠀⊘ [{{ '{{' }} ansible_callback_diy.result.host | default('host') {{ '}}' }}]
runner_on_skipped_msg_color = cyan
runner_on_unreachable_msg = UNREACHABLE: [{{ '{{' }} ansible_callback_diy.result.host | default('host') {{ '}}' }}]
runner_on_unreachable_msg_color = bright magenta
playbook_on_stats_msg = PLAYBOOK SUMMARY
 ================
 STATUS        OK  CHANGED  FAILED  HOST
 {{ '{%' }} for host in ansible_callback_diy.stats.processed.keys() | sort {{ '%}' }}
 {{ '{%' }} set status = "UNREACHABLE" if host in ansible_callback_diy.stats.dark | default({}) else "FAILED" if host in ansible_callback_diy.stats.failures | default({}) else "OK" {{ '%}' }}{{ '{{' }} "%-12s" | format(status) {{ '}}' }} {{ '{{' }} "%3d" | format(ansible_callback_diy.stats.ok.get(host, 0)) {{ '}}' }}      {{ '{{' }} "%3d" | format(ansible_callback_diy.stats.changed.get(host, 0)) {{ '}}' }}     {{ '{{' }} "%3d" | format(ansible_callback_diy.stats.failures.get(host, 0)) {{ '}}' }}  {{ '{{' }} host {{ '}}' }}
 {{ '{%' }} endfor {{ '%}' }}
playbook_on_stats_msg_color = bright green
{% endif %}
{% if ansible_cfg_callback_plugin_profile_tasks %}

[callback_profile_tasks]
summary_only = true
{% endif %}
[ssh_connection]
remote_port = {{ ansible_cfg_ssh_port }}
{% if ansible_facts['distribution'] == 'openSUSE' %}

[connection]
retries = {{ ansible_cfg_reconnection_retries }}
{% endif %}
