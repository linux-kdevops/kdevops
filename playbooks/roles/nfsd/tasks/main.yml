---
- name: Debian-specific setup
  ansible.builtin.include_tasks: install-deps/debian/main.yml
  when: ansible_os_family == 'Debian'

- name: SuSE-specific setup
  ansible.builtin.include_tasks: install-deps/suse/main.yml
  when: ansible_os_family == 'Suse'

- name: Red Hat-specific setup
  ansible.builtin.include_tasks: install-deps/redhat/main.yml
  when: ansible_os_family == 'RedHat'

- name: Generate /etc/nfs.conf
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.template:
    src: nfs.conf.j2
    dest: /etc/nfs.conf
    owner: root
    group: root
    mode: "0644"

- name: Set up iSCSI target on NFS server for pNFS block layout
  ansible.builtin.include_role:
    name: iscsi
  when:
    - fstests_nfs_section_pnfs|default(false)|bool

- name: Set up an iSCSI initiator
  ansible.builtin.include_role:
    name: iscsi
    tasks_from: add_initiator
  when:
    - nfsd_export_storage_iscsi|bool
    - nfsd_export_fstype != "tmpfs"

- name: Set up a volume group on local block devices
  ansible.builtin.include_role:
    name: volume_group
  vars:
    volume_group_name: "exports"
  when:
    - nfsd_export_storage_local|bool
    - nfsd_export_fstype != "tmpfs"

- name: Create {{ nfsd_export_path }}
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.file:
    path: "{{ nfsd_export_path }}"
    state: directory
    mode: "0755"

- name: Test whether SELinux is enabled
  ansible.builtin.command: /usr/sbin/selinuxenabled
  register: selinux_status
  changed_when: false
  failed_when: false

- name: Copy SELinux type enforcement file to server
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/roles/nfsd/templates/nfsd_policy.te"
    dest: "/root/nfsd_policy.te"
    owner: root
    group: root
    mode: "0644"
  when: selinux_status.rc == 0

- name: Convert SELinux type enforcement file to a policy module
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.command: /usr/bin/checkmodule -M -m -o /root/nfsd_policy.mod /root/nfsd_policy.te
  when: selinux_status.rc == 0

- name: Compile SELinux policy module into policy package
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.command: /usr/bin/semodule_package -o /root/nfsd_policy.pp -m /root/nfsd_policy.mod
  when: selinux_status.rc == 0

- name: Install SELinux policy module
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.command: /usr/sbin/semodule -i /root/nfsd_policy.pp
  when: selinux_status.rc == 0

- name: Allow nfsd full access to {{ nfsd_export_path }}
  become: true
  become_flags: "su - -c"
  become_method: sudo
  community.general.sefcontext:
    target: "{{ nfsd_export_path }}(/.*)?"
    setype: public_content_rw_t
    state: present
  when: selinux_status.rc == 0

# FIXME: open ports instead
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Turn off firewalld
  become: true
  ansible.builtin.systemd_service:
    name: firewalld.service
    enabled: false
    state: stopped
  when: '"firewalld.service" in ansible_facts.services'

- name: Start up nfsd
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.systemd_service:
    name: nfs-server.service
    enabled: true
    state: reloaded
