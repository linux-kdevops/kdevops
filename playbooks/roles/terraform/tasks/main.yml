---
- name: Bring up terraform resources
  cloud.terraform.terraform:
    force_init: true
    project_path: "{{ topdir_path }}/terraform/{{ kdevops_terraform_provider }}"
    state: present
  tags:
    - bringup

- name: Retrieve the controller_ip_map from terraform
  delegate_to: localhost
  run_once: true
  ansible.builtin.command:
    chdir: "{{ topdir_path }}/terraform/{{ kdevops_terraform_provider }}"
    cmd: "terraform output -json controller_ip_map"
  register: terraform_output
  changed_when: false
  tags:
    - ssh

- name: Convert the retrieved controller_ip_map into a dictionary
  delegate_to: localhost
  run_once: true
  ansible.builtin.set_fact:
    controller_ip_map: "{{ terraform_output.stdout | from_json }}"
  tags:
    - ssh

- name: Add each target node's ssh Host entry on the control host
  delegate_to: localhost
  throttle: 1
  ansible.builtin.blockinfile:
    block: "{{ lookup('template', 'ssh_config.j2') }}"
    create: true
    dest: "{{ kdevops_ssh_config }}"
    insertafter: "EOF"
    marker: "# {mark} host configuration for {{ inventory_hostname }}"
    mode: "u=rw,g=r,o=r"
  tags:
    - ssh

- name: Ensure the Include directive is present on the controller
  delegate_to: localhost
  run_once: true
  ansible.builtin.blockinfile:
    path: "{{ sshconfig }}"
    insertbefore: BOF
    append_newline: true
    marker: "# {mark} Managed by kdevops"
    mode: "u=rw,g=r,o=r"
    block: "Include {{ kdevops_ssh_config_prefix }}*"
  tags:
    - ssh

- name: Wait for target nodes to become reachable
  ansible.builtin.wait_for_connection:
    timeout: 60
  tags:
    - ssh

- name: Remove the ephemeral ssh config file on the control host
  ansible.builtin.file:
    path: "{{ kdevops_ssh_config }}"
    state: absent
  tags:
    - destroy

- name: Destroy terraform resources
  cloud.terraform.terraform:
    force_init: true
    project_path: "{{ topdir_path }}/terraform/{{ kdevops_terraform_provider }}"
    state: absent
  tags:
    - destroy
