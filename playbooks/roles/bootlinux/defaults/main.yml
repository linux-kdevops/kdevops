# SPDX-License-Identifier copyleft-next-0.3.1
---
kdevops_bootlinux: false
infer_uid_and_group: false

data_path: "/data"
data_user: "root"
data_group: "root"

data_device: "/dev/disk/by-id/nvme-QEMU_NVMe_Ctrl_kdevops0"
data_fstype: "xfs"
data_label: "data"
data_fs_opts: "-L {{ disk_setup_label }}"

# Linux target defaults
target_linux_admin_name: "Hacker Amanda"
target_linux_admin_email: "devnull@kernel.org"
target_linux_git: "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
target_linux_shallow_depth: 0
target_linux_tree: "linux-stable"
target_linux_dir_path: "{{ data_path }}/{{ target_linux_tree }}"
kdevops_baseline_and_dev: false

target_linux_ref: "v4.19.133"
target_linux_delta_file:
target_linux_config: "config-{{ target_linux_ref }}"
make: "make"
# Once ansible v2.10 becomes available we can move on to using
# ansible_processor_nproc but that was merged in 2020:
# The commit is 34db57a47f875d11c4068567b9ec7ace174ec4cf
# introduce fact "ansible_processor_nproc": number of usable vcpus #66569
# https://github.com/ansible/ansible/pull/66569
# Build command without environment variables (added via environment dict)
target_linux_make_cmd: "{{ make }} -j{{ ansible_processor_vcpus }}"

# Make parameters dictionary for community.general.make module
bootlinux_make_params: >-
  {{
    ({} | combine(
      {'CC': 'ccache clang' if bootlinux_compiler_clang|default(false)|bool else 'ccache gcc'} if bootlinux_ccache|default(false)|bool else {}
    ) | combine(
      {
        'KBUILD_BUILD_TIMESTAMP': '',
        'KBUILD_BUILD_USER': 'kdevops',
        'KBUILD_BUILD_HOST': 'kdevops'
      } if bootlinux_reproducible_builds|default(false)|bool else {}
    ))
  }}

# Environment variables for remaining shell tasks (non-make)
bootlinux_build_environment: >-
  {{
    ({} | combine(
      {'CCACHE_CONFIGPATH': topdir_path + '/.ccache/ccache.conf'} if (bootlinux_ccache|default(false)|bool and bootlinux_ccache_kdevops_managed|default(false)|bool) else {}
    ) | combine(
      {'CC': 'ccache clang' if bootlinux_compiler_clang|default(false)|bool else 'ccache gcc'} if bootlinux_ccache|default(false)|bool else {}
    ) | combine(
      {
        'KBUILD_BUILD_TIMESTAMP': '',
        'KBUILD_BUILD_USER': 'kdevops',
        'KBUILD_BUILD_HOST': 'kdevops'
      } if bootlinux_reproducible_builds|default(false)|bool else {}
    ))
  }}
target_linux_make_install_cmd: "{{ target_linux_make_cmd }} modules_install install"

uninstall_kernel_enable: false

# If defined we'll apply this delta for you.
# target_linux_extra_patch: foo.patch

bootlinux_b4_am_this_host: false

bootlinux_9p: false
bootlinux_targets: false
bootlinux_builder: false

kdevops_workflow_enable_cxl: false

bootlinux_cxl_test: false
bootlinux_tree_set_by_cli: false

bootlinux_artifacts_dir: "{{ topdir_path }}/workflows/linux/artifacts"
kernel_packages: []
workflow_linux_packaged: false

# 9P package generation defaults
bootlinux_9p_build_packages: false
bootlinux_9p_repository_path: "{{ topdir_path }}/workflows/linux/artifacts"

# A/B testing defaults
bootlinux_ab_same_ref: true
bootlinux_ab_different_ref: false

# Development kernel settings (used when bootlinux_ab_different_ref is True)
bootlinux_dev_tree: ""
target_linux_dev_ref: "master"
target_linux_dev_kernelrelease: ""
target_linux_dev_localversion: ""
bootlinux_tree_custom_kernelrelease: false
bootlinux_tree_custom_localversion: false
bootlinux_is_dev_node: false
bootlinux_debug_ref: "{{ lookup('env', 'DEBUG_REF') | default(false, true) | bool }}"

# Kernel configuration fragments support
bootlinux_use_config_fragments: false

# Upstream kernel fragments
bootlinux_fragment_tiny: false
bootlinux_fragment_nopm: false
bootlinux_fragment_debug: false
bootlinux_fragment_hardening: false
bootlinux_fragment_kvm_guest: true
bootlinux_fragment_xen: false
bootlinux_fragment_rust: false

# kdevops fragments
bootlinux_fragment_64bit: true
bootlinux_fragment_systemd: true
bootlinux_fragment_distro: true
bootlinux_fragment_storage: true
bootlinux_fragment_virtio_fs: true
bootlinux_fragment_numa: false
bootlinux_fragment_modules: false
bootlinux_fragment_initramfs: true
bootlinux_fragment_ebpf: false
bootlinux_fragment_gdb: false
bootlinux_fragment_vm_debug: false
bootlinux_fragment_localversion: false
bootlinux_fragment_blktrace: false
bootlinux_fragment_ksm: false

# ARM64 page size (mutually exclusive choice)
bootlinux_fragment_arm64_4k_pages: false
bootlinux_fragment_arm64_16k_pages: false
bootlinux_fragment_arm64_64k_pages: false

# Additional kdevops fragments
bootlinux_fragment_buffer_head: false
bootlinux_fragment_ebpf_errorinj: false
bootlinux_fragment_localauto: true
bootlinux_fragment_moby: false
bootlinux_fragment_modules_blk: false
bootlinux_fragment_x86: false
bootlinux_fragment_xarray: false
bootlinux_fragment_xarray_no_multi: false

