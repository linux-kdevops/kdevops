---
- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_items:
    - "../extra_vars.yaml"
  tags: vars

- name: Docker storage setup
  when: ai_docker_storage_enable|bool
  block:
    - name: Install filesystem utilities
      package:
        name:
          - xfsprogs
          - e2fsprogs
          - btrfs-progs
          - rsync
        state: present
      become: yes
      become_method: sudo

    - name: Check if device exists
      stat:
        path: "{{ ai_docker_device }}"
      register: docker_device_stat
      failed_when: not docker_device_stat.stat.exists

    - name: Check if Docker storage is already mounted
      command: mountpoint -q {{ ai_docker_mount_point }}
      register: docker_mount_check
      changed_when: false
      failed_when: false

    - name: Setup Docker storage filesystem
      when: docker_mount_check.rc != 0
      block:
        - name: Create Docker mount point directory
          file:
            path: "{{ ai_docker_mount_point }}"
            state: directory
            mode: '0755'
          become: yes
          become_method: sudo

        - name: Format device with XFS
          command: >
            mkfs.xfs -f
            -b size={{ ai_docker_xfs_blocksize | default(4096) }}
            -s size={{ ai_docker_xfs_sectorsize | default(4096) }}
            {{ ai_docker_xfs_mkfs_opts | default('') }}
            {{ ai_docker_device }}
          when: ai_docker_fstype == "xfs"
          become: yes
          become_method: sudo

        - name: Format device with Btrfs
          command: mkfs.btrfs {{ ai_docker_btrfs_mkfs_opts }} {{ ai_docker_device }}
          when: ai_docker_fstype == "btrfs"
          become: yes
          become_method: sudo

        - name: Format device with ext4
          command: mkfs.ext4 {{ ai_docker_ext4_mkfs_opts }} {{ ai_docker_device }}
          when: ai_docker_fstype == "ext4"
          become: yes
          become_method: sudo

        - name: Mount Docker storage filesystem
          mount:
            path: "{{ ai_docker_mount_point }}"
            src: "{{ ai_docker_device }}"
            fstype: "{{ ai_docker_fstype }}"
            opts: defaults,noatime
            state: mounted
          become: yes
          become_method: sudo

        - name: Add Docker storage mount to fstab
          mount:
            path: "{{ ai_docker_mount_point }}"
            src: "{{ ai_docker_device }}"
            fstype: "{{ ai_docker_fstype }}"
            opts: defaults,noatime
            state: present
          become: yes
          become_method: sudo

    - name: Check if Docker service exists
      systemd:
        name: docker
      register: docker_service_status
      failed_when: false
      changed_when: false

    - name: Stop Docker service if running
      systemd:
        name: docker
        state: stopped
      become: yes
      become_method: sudo
      when: docker_service_status.status is defined and docker_service_status.status.ActiveState == 'active'
      ignore_errors: yes

    # Note: When ai_docker_storage_enable is true, we mount directly to /var/lib/docker
    # No need to move data or create symlinks as the storage is already in the right place

    - name: Ensure Docker directory has proper permissions
      file:
        path: "{{ ai_docker_mount_point }}"
        state: directory
        mode: '0711'
        owner: root
        group: root
      become: yes
      become_method: sudo
      when: ai_docker_mount_point == '/var/lib/docker'

    # Docker will be installed and started later by the ai role
    # We only prepare the storage here
    - name: Display Docker storage setup complete
      debug:
        msg: "Docker storage has been prepared at: {{ ai_docker_mount_point }}"
